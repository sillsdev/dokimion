server {
    server_name quack2.psonet;
    #listen [::]:80;
    listen 80;

    # server name in "Host" request header or the primary
    # server name
    proxy_set_header Host $host;
    proxy_set_header Connection "";
        
    proxy_read_timeout     300;
    proxy_connect_timeout  300;
    proxy_http_version     1.1;

    # compression of server responses
    gzip on;
    gzip_types      text/plain application/xml application/json;
    gzip_proxied    no-cache no-store private expired auth;
    gzip_min_length 1000;

    root /usr/local/src/quack/ui/src/public;
    index index.html index.htm;

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log debug;

    add_header Access-Control-Allow-Origin *;
    location / {
        # asynchronous thread pools
        aio threads;

        # maximum number of requests that can be served through 1
        # keep alive connection
        keepalive_requests 100;

        # number and size of the buffers used for reading a response
        # from the proxied server
        proxy_buffers 16 4k;
        # size of buffer used for reading the first part of the response
        # received from the proxied server
        proxy_buffer_size 2k;

        proxy_pass http://127.0.0.1:3000/;
    }
    
    location /api {
        # asynchronous thread pools
        aio threads;

        # maximum number of requests that can be served through 1
        # keep alive connection
        keepalive_requests 100;

        # number and size of the buffers used for reading a response
        # from the proxied server
        proxy_buffers 16 4k;
        # size of buffer used for reading the first part of the response
        # received from the proxied server
        proxy_buffer_size 2k;

        proxy_pass http://127.0.0.1:8080/api;
        proxy_redirect          off;
        proxy_connect_timeout   60s;


        # allow resource sharing between sites using CORS header
        add_header Access-Control-Allow-Methods "GET,PUT,OPTIONS,POST,DELETE";
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Headers "Content-Type";
        add_header Access-Control-Max-Age "86400";
    }


   location /sockjs-node {
        # asynchronous thread pools
        aio threads;

        # maximum number of requests that can be served through 1
        # keep alive connection
        keepalive_requests 100;

        # number and size of the buffers used for reading a response
        # from the proxied server
        proxy_buffers 16 4k;
        # size of buffer used for reading the first part of the response
        # received from the proxied server
        proxy_buffer_size 2k;

        # passes real ip in header to upstream server
        proxy_set_header X-Real-IP $remote_addr;
        # automatically appends $remote_addr to any incoming
        # X-Forwarded-For headers
        proxy_set_header X-Forwarded-for $proxy_add_x_forwarded_for;

        proxy_pass http://localhost:8080;

        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

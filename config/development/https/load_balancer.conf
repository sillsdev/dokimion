resolver 10.0.0.1 ipv6=off valid=10s;

upstream prod_servers {
    sticky;
    server temp-dokimion1.psonet max_fails=3 fail_timeout=30s;
    keepalive 64;
}


server {
    listen 443 ssl;

    include snippets/self-signed.conf;
    include snippets/ssl-params.conf;

    server_name temp-dokimion.psonet;

    location / {
      resolver 10.0.0.1 ipv6=off valid=10s;
      set $empty "";

      # asynchronous thread pools
      aio threads;


      # allows redefining or appending fields to the request
      # header passed to the proxied server

      # server name in "Host" request header or the primary
      # server name
      proxy_set_header Host $host;
      proxy_set_header Connection "";
      # passes real ip in header to upstream server
      proxy_set_header X-Real-IP $remote_addr;
      # automatically appends $remote_addr to any incoming
      # X-Forwarded-For headers
      proxy_set_header X-Forwarded-for $proxy_add_x_forwarded_for;

      proxy_http_version 1.1;

      # maximum number of requests that can be served through 1
      # keep alive connection
      keepalive_requests 100;

      # number and size of the buffers used for reading a response
      # from the proxied server
      #proxy_buffers 16 4k;
      # size of buffer used for reading the first part of the response
      # received from the proxied server
      #proxy_buffer_size 2k;
 
      proxy_pass http://prod_servers$empty;
      proxy_buffering off;
    }
}

server {
    listen 0.0.0.0:80;
    # send HTTP messages from production servers out using HTTPS
    server_name temp-dokimion.psonet;

    location = /favicon.ico {
      return 204;
      access_log off;
      log_not_found off;
    }

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    rewrite ^/[old-page]$ https://[domain]/[new-page] permanent;

}
